{"version":3,"sources":["components/hero.jsx","components/heros/actividades.jsx","components/heros/organizadores.jsx","components/heros/social.jsx","components/heros/ubicacion.jsx","components/heros/inicio.jsx","components/heros.jsx","components/navbarItem.jsx","components/navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["Hero","react_default","a","createElement","className","id","this","props","hero","content","Component","Actividades","Organizadores","Social","Ubicacion","Inicio","data-scroll-index","poster","playsInline","autoPlay","muted","loop","src","type","alt","Heros","state","heros","organizadores","actividades","social","ubicacion","Fragment","inicio","map","h","key","NavbarItem","_this","href","item","active","onClick","text","Navbar","items","handleClick","Object","toConsumableArray","index","indexOf","i","setState","_this2","role","aria-label","navbarItem","App","navbar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f073992.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Hero extends Component {\n  render() {\n    return (\n      <section\n        className=\"hero has-background-dark is-fullheight-with-navbar\"\n        id={this.props.hero.id}\n      >\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            {this.props.hero.content}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Hero;\n","import React, { Component } from \"react\";\n\nclass Actividades extends Component {\n  render() {\n    return <h1 className=\"title has-text-white\">Actividadesx</h1>;\n  }\n}\n\nexport default Actividades;\n","import React, { Component } from \"react\";\n\nclass Organizadores extends Component {\n  render() {\n    return <h1 className=\"title has-text-white\">Organizadoresx</h1>;\n  }\n}\n\nexport default Organizadores;\n","import React, { Component } from \"react\";\n\nclass Social extends Component {\n  render() {\n    return <h1 className=\"title has-text-white\">Socialx</h1>;\n  }\n}\n\nexport default Social;\n","import React, { Component } from \"react\";\n\nclass Ubicacion extends Component {\n  render() {\n    return <h1 className=\"title has-text-white\">Ubicaciónx</h1>;\n  }\n}\n\nexport default Ubicacion;\n","import React, { Component } from \"react\";\n\nclass Inicio extends Component {\n  render() {\n    return (\n      <section\n        className=\"hero is-fullheight-with-navbar video\"\n        id=\"inicio\"\n        data-scroll-index=\"0\"\n      >\n        <div className=\"hero-video\">\n          <video poster=\"\" id=\"bgvid\" playsInline autoPlay muted loop>\n            <source src=\"Ensamble.mp4\" type=\"video/webm\" />\n          </video>\n        </div>\n\n        <div className=\"hero-head\">\n          <div className=\"columns is-multiline is-mobile is-centered is-marginless\">\n            <div className=\"column is-flex is-centered\">\n              <figure className=\"image\">\n                <img src=\"logos/logo_ministerio.png\" alt=\"\" />\n              </figure>\n              <figure className=\"image\">\n                <img src=\"logos/logo_conservatorio.png\" alt=\"\" />\n              </figure>\n              <figure className=\"image\">\n                <img src=\"logos/logo_facultad.png\" alt=\"\" />\n              </figure>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <h1 className=\"subtitle is-2 has-text-white\">\n              Conservatorio de Música UACh\n            </h1>\n            <h1 className=\"title is-1 has-text-white\">\n              Encuentro de Música Chilena Contemporánea 2018x\n            </h1>\n            <h2 className=\"subtitle is-3 has-text-white\">\n              Pensamiento creativo e identidades del sur\n            </h2>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Inicio;\n","import React, { Component } from \"react\";\nimport Hero from \"./hero\";\nimport Actividades from \"./heros/actividades\";\nimport Organizadores from \"./heros/organizadores\";\nimport Social from \"./heros/social\";\nimport Ubicacion from \"./heros/ubicacion\";\nimport Inicio from \"./heros/inicio\";\n\nclass Heros extends Component {\n  state = {\n    heros: [\n      {\n        id: \"organizadores\",\n        content: <Organizadores />\n      },\n      {\n        id: \"actividades\",\n        content: <Actividades />\n      },\n      {\n        id: \"social\",\n        content: <Social />\n      },\n      {\n        id: \"ubicacion\",\n        content: <Ubicacion />\n      }\n    ]\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Inicio />\n        {this.state.heros.map(h => (\n          <Hero key={h.id} hero={h} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Heros;\n","import React, { Component } from \"react\";\n\nclass NavbarItem extends Component {\n  render() {\n    return (\n      <a\n        href={this.props.item.href}\n        className={\n          this.props.item.active\n            ? \"navbar-item is-tab is-active\"\n            : \"navbar-item is-tab\"\n        }\n        onClick={() => this.props.onClick(this.props.item)}\n      >\n        {this.props.item.text}\n      </a>\n    );\n  }\n}\n\nexport default NavbarItem;\n","import React, { Component } from \"react\";\nimport NavbarItem from \"./navbarItem\";\n\nclass Navbar extends Component {\n  state = {\n    items: [\n      { text: \"Inicio\", href: \"#inicio\", active: true },\n      { text: \"Organizadores\", href: \"#organizadores\", active: false },\n      { text: \"Actividades\", href: \"#actividades\", active: false },\n      { text: \"Social\", href: \"#social\", active: false },\n      { text: \"Ubicación\", href: \"#ubicacion\", active: false }\n    ]\n  };\n\n  handleClick = item => {\n    const items = [...this.state.items];\n    const index = items.indexOf(item);\n    items.map(i => (i.active = false));\n    items[index].active = true;\n    this.setState(items);\n  };\n\n  render() {\n    return (\n      <nav\n        className=\"navbar is-fixed-bottom is-dark\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            {this.state.items.map(i => (\n              <NavbarItem key={i.href} onClick={this.handleClick} item={i} />\n            ))}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Heros from \"./components/heros\";\nimport Navbar from \"./components/navbar\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Heros />\n        <Navbar />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bulma/css/bulma.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}